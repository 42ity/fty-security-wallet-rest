<project
    name = "fty-security-wallet-rest"
    description = "Security wallet REST API"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-security-wallet-rest"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" >
        <option name = "recursive_dependencies" value = "true"/>
        <!-- option name = "clangformat_implem" value = "autotools" / -->
        <option name = "use_cmake" value = "0" />
        <option name = "shadow_gcc" value = "2" />
        <!-- option name = "clangformat_require_good" value = "1" / -->
        <option name = "clangformat_allow_failures" value = "1" />
        <option name = "use_pkg_deps_prereqs_source" value = "0" />
        <option name = "require_gitignore" value = "1" />
    </target>
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image-ipm_2.1.0 &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />
        <option name = "use_test_retry" value = "3" />
        <option name = "use_test_timeout" value = "30" />

        <!-- Try to avoid avalanche rebuilds of same code on our CI -->
        <option name = "use_earlymilestone" value = "1" />
        <option name = "use_deploymilestone" value = "1" />
        <option name = "use_build_nonconcurrent" value = "1" />
        <option name = "use_checkout_explicit" value = "1" />
    </target>

    <classfilename keep-tree = "true" use-cxx = "true" use-cxx-gcc-4-9 = "true" pretty-print = "no" source-extension = "cc" />
    <include filename = "license.xml" />

    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />

    <use project = "czmq"
        repository = "https://github.com/42ity/czmq.git"
        min_major = "3" min_minor = "0" min_patch = "2" >

        <use project = "libzmq"
            repository = "https://github.com/42ity/libzmq.git" >

            <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git" 
                test = "sodium_init" />
        </use>
    </use>

    <!-- fty-common -->
    <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
        repository = "https://github.com/42ity/fty-common.git" />

    <!-- Note: cxxtools facilities are directly used in this codebase -->
    <use project = "cxxtools"
        header = "cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git" />

    <!-- Note: pure C projects should use fty-log/fty_logger.h, C++ use fty_log.h -->
    <use project = "fty-common-logging" libname = "libfty_common_logging"
        header = "fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git" />

    <use project = "fty-common-mlm" libname = "libfty_common_mlm" header = "fty_common_mlm.h"
        repository = "https://github.com/42ity/fty-common-mlm.git" />

    <use project = "fty-common-rest" libname = "libfty_common_rest" header = "fty_common_rest.h"
        repository = "https://github.com/42ity/fty-common-rest.git" />

    <use project = "fty-common-socket" libname = "libfty_common_socket" header = "fty_common_socket.h"
        repository = "https://github.com/42ity/fty-common-socket.git" />

    <use project = "fty-security-wallet" libname = "libfty_security_wallet" header = "fty_security_wallet.h"
        repository = "https://github.com/42ity/fty-security-wallet.git" />
    
    <use project = "tntdb"
        test = "tntdb::Date::gmtime"
        repository = "https://github.com/42ity/tntdb.git"
        builddir = "tntdb" />

    <class name = "helpers_security_wallet_rest" private = "1" selftest = "0">Helpers</class>

    <!-- Note: the .cpp file is generated by ECPP parser during build
         from .ecpp file that is EXTRA_DISTed in Makemodule-local.am,
         and renamed to a .cc file just to abuse pregenerated zproject
         recipes. The "extra" or "bin" tags did not produce the effect
         we needed, since they refer verbatim to the "name" (new GSLs
         are needed to handle this).
         The "license.cc" file generated by zproject should be discarded
         and ignored; the "license.h" is harmless to have and include
         in other generated files. There is no selftest.
         At least one non-private and stable class should be declared,
         in order to generate lib* packaging metadata with zproject.
         It is OPTIONALLY included in build, so should be a bogus file
         with no consequences if it's missing - enter stub_security_wallet_rest.
     -->
    <!-- class name = "rest_portfolios_GET" private = "1" state = "stable" selftest = "0" / --> <!-- rest_*.cc will be generated by eccp -->

    <class name = "rest_documents_POST" private = "1" state = "stable" selftest = "0" /> <!-- rest_*.cc will be generated by eccp -->
    <class name = "rest_documents_GET" private = "1" state = "stable" selftest = "0" /> <!-- rest_*.cc will be generated by eccp -->
    <class name = "rest_documents_DELETE" private = "1" state = "stable" selftest = "0" /> <!-- rest_*.cc will be generated by eccp -->

    <class name = "rest_document_GET" private = "1" state = "stable" selftest = "0" /> <!-- rest_*.cc will be generated by eccp -->
    <class name = "rest_document_PUT" private = "1" state = "stable" selftest = "0" /> <!-- rest_*.cc will be generated by eccp -->
    <class name = "rest_document_DELETE" private = "1" state = "stable" selftest = "0" /> <!-- rest_*.cc will be generated by eccp -->

    <class name = "stub_security_wallet_rest" stable = "1">REST API for Security Wallet</class>
</project>
